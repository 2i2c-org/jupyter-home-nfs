apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nfs-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
      annotations:
        {{- if .Values.prometheusExporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- end }}
    spec:
      containers:
      - name: nfs-server
        image: "{{ .Values.nfsServer.image.repository }}:{{ .Values.nfsServer.image.tag }}"
        ports:
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        - name: rpcbind
          containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
        - name: home-directories
          mountPath: /export
      - name: enforce-xfs-quota
        image: "{{ .Values.quotaEnforcer.image.repository }}:{{ .Values.quotaEnforcer.image.tag }}"
        command: ["/usr/local/bin/generate.py", "{{ .Values.quotaEnforcer.path }}", "--hard-quota", "{{ .Values.quotaEnforcer.hardQuota }}"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: home-directories
          mountPath: /export
      {{- if .Values.prometheusExporter.enabled }}
      - name: metrics-exporter
        image: "{{ .Values.prometheusExporter.image.repository }}:{{ .Values.prometheusExporter.image.tag }}"
        args:
        - --collector.disable-defaults
        - --path.rootfs=/export
        - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem
        ports:
        - name: metrics
          containerPort: 9100
        volumeMounts:
        - name: home-directories
          mountPath: /export
          readOnly: true
      {{- end }}
      volumes:
      - name: home-directories
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-nfs-home-directories-claim